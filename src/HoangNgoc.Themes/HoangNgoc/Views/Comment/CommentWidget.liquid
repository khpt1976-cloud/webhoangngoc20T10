{% comment %}
Comment Widget View - HoangNgoc Theme
Interactive comment system with real-time features
{% endcomment %}

<div class="comment-widget" data-content-id="{{ Model.ContentId }}" data-animate="fade-in">
    <!-- Comment Stats -->
    <div class="comment-stats">
        <h3 class="comment-title">
            <i class="fas fa-comments"></i>
            Bình luận ({{ Model.CommentsCount | default: 0 }})
        </h3>
        {% if Model.CommentsCount > 0 %}
            <div class="comment-summary">
                <span class="rating-summary">
                    {% if Model.AverageRating > 0 %}
                        <div class="stars">
                            {% for i in (1..5) %}
                                {% if i <= Model.AverageRating %}
                                    <i class="fas fa-star"></i>
                                {% else %}
                                    <i class="far fa-star"></i>
                                {% endif %}
                            {% endfor %}
                        </div>
                        <span class="rating-text">{{ Model.AverageRating }}/5</span>
                    {% endif %}
                </span>
            </div>
        {% endif %}
    </div>

    <!-- Comment Form -->
    {% if User.Identity.IsAuthenticated %}
        <div class="comment-form-section">
            <form id="commentForm" class="comment-form" data-validate>
                <input type="hidden" name="contentId" value="{{ Model.ContentId }}">
                <input type="hidden" name="parentId" value="">
                
                <div class="form-header">
                    <div class="user-avatar">
                        {% if User.Avatar %}
                            <img src="{{ User.Avatar | asset_url }}" alt="{{ User.Identity.Name }}">
                        {% else %}
                            <div class="avatar-placeholder">
                                <i class="fas fa-user"></i>
                            </div>
                        {% endif %}
                    </div>
                    <div class="user-info">
                        <span class="user-name">{{ User.Identity.Name }}</span>
                        <span class="user-role">{{ User.Role | default: "Thành viên" }}</span>
                    </div>
                </div>

                <!-- Rating (if enabled) -->
                {% if Model.AllowRating %}
                    <div class="rating-input">
                        <label class="form-label">Đánh giá của bạn:</label>
                        <div class="star-rating" data-rating="0">
                            {% for i in (1..5) %}
                                <i class="far fa-star" data-value="{{ i }}"></i>
                            {% endfor %}
                        </div>
                        <input type="hidden" name="rating" value="0">
                    </div>
                {% endif %}

                <div class="form-group">
                    <textarea name="content" class="form-control comment-textarea" 
                              placeholder="Chia sẻ suy nghĩ của bạn..." 
                              rows="4" required></textarea>
                    <div class="textarea-footer">
                        <div class="formatting-help">
                            <small class="text-muted">
                                <i class="fas fa-info-circle"></i>
                                Hỗ trợ Markdown cơ bản
                            </small>
                        </div>
                        <div class="character-count">
                            <span class="current">0</span>/<span class="max">1000</span>
                        </div>
                    </div>
                </div>

                <div class="form-actions">
                    <div class="form-options">
                        <div class="form-check">
                            <input type="checkbox" id="notifyReplies" name="notifyReplies" 
                                   class="form-check-input" checked>
                            <label class="form-check-label" for="notifyReplies">
                                Thông báo khi có phản hồi
                            </label>
                        </div>
                    </div>
                    <div class="submit-actions">
                        <button type="button" class="btn btn-outline btn-sm" onclick="cancelComment()">
                            Hủy
                        </button>
                        <button type="submit" class="btn btn-primary btn-sm" data-loading>
                            <i class="fas fa-paper-plane"></i>
                            Gửi bình luận
                        </button>
                    </div>
                </div>
            </form>
        </div>
    {% else %}
        <div class="login-prompt">
            <div class="prompt-content">
                <i class="fas fa-sign-in-alt"></i>
                <h4>Đăng nhập để bình luận</h4>
                <p>Bạn cần đăng nhập để có thể tham gia thảo luận</p>
                <div class="prompt-actions">
                    <a href="{{ '~/Account/Login' | href }}?returnUrl={{ Request.Url | url_encode }}" 
                       class="btn btn-primary">
                        Đăng nhập
                    </a>
                    <a href="{{ '~/Account/Register' | href }}" class="btn btn-outline">
                        Đăng ký
                    </a>
                </div>
            </div>
        </div>
    {% endif %}

    <!-- Comments List -->
    <div class="comments-section">
        {% if Model.Comments.size > 0 %}
            <!-- Sort Options -->
            <div class="comments-header">
                <div class="sort-options">
                    <label for="commentSort">Sắp xếp theo:</label>
                    <select id="commentSort" class="form-control form-control-sm">
                        <option value="newest">Mới nhất</option>
                        <option value="oldest">Cũ nhất</option>
                        <option value="rating">Đánh giá cao</option>
                        <option value="helpful">Hữu ích nhất</option>
                    </select>
                </div>
            </div>

            <div class="comments-list" id="commentsList">
                {% for comment in Model.Comments %}
                    <div class="comment-item" data-comment-id="{{ comment.Id }}" data-animate="slide-up">
                        <div class="comment-avatar">
                            {% if comment.Author.Avatar %}
                                <img src="{{ comment.Author.Avatar | asset_url }}" alt="{{ comment.Author.Name }}">
                            {% else %}
                                <div class="avatar-placeholder">
                                    <i class="fas fa-user"></i>
                                </div>
                            {% endif %}
                        </div>

                        <div class="comment-content">
                            <div class="comment-header">
                                <div class="author-info">
                                    <span class="author-name">{{ comment.Author.Name }}</span>
                                    {% if comment.Author.IsVerified %}
                                        <i class="fas fa-check-circle verified" title="Tài khoản đã xác thực"></i>
                                    {% endif %}
                                    <span class="author-role">{{ comment.Author.Role }}</span>
                                </div>
                                <div class="comment-meta">
                                    {% if comment.Rating > 0 %}
                                        <div class="comment-rating">
                                            {% for i in (1..5) %}
                                                {% if i <= comment.Rating %}
                                                    <i class="fas fa-star"></i>
                                                {% else %}
                                                    <i class="far fa-star"></i>
                                                {% endif %}
                                            {% endfor %}
                                        </div>
                                    {% endif %}
                                    <span class="comment-date" title="{{ comment.CreatedAt | date: 'dd/MM/yyyy HH:mm' }}">
                                        {{ comment.CreatedAt | time_ago }}
                                    </span>
                                    {% if comment.IsEdited %}
                                        <span class="edited-indicator" title="Đã chỉnh sửa lúc {{ comment.UpdatedAt | date: 'dd/MM/yyyy HH:mm' }}">
                                            <i class="fas fa-edit"></i>
                                        </span>
                                    {% endif %}
                                </div>
                            </div>

                            <div class="comment-body">
                                <div class="comment-text">
                                    {{ comment.Content | markdownify }}
                                </div>
                                
                                {% if comment.Attachments.size > 0 %}
                                    <div class="comment-attachments">
                                        {% for attachment in comment.Attachments %}
                                            <div class="attachment-item">
                                                {% if attachment.Type == 'image' %}
                                                    <img src="{{ attachment.Url | asset_url }}" 
                                                         alt="Attachment" 
                                                         class="attachment-image"
                                                         onclick="openImageModal('{{ attachment.Url | asset_url }}')">
                                                {% else %}
                                                    <a href="{{ attachment.Url | asset_url }}" 
                                                       class="attachment-link" 
                                                       target="_blank">
                                                        <i class="fas fa-file"></i>
                                                        {{ attachment.Name }}
                                                    </a>
                                                {% endif %}
                                            </div>
                                        {% endfor %}
                                    </div>
                                {% endif %}
                            </div>

                            <div class="comment-actions">
                                <div class="action-buttons">
                                    <button class="action-btn like-btn {% if comment.IsLiked %}active{% endif %}" 
                                            onclick="toggleLike({{ comment.Id }})">
                                        <i class="fas fa-thumbs-up"></i>
                                        <span class="count">{{ comment.LikesCount | default: 0 }}</span>
                                    </button>
                                    
                                    <button class="action-btn dislike-btn {% if comment.IsDisliked %}active{% endif %}" 
                                            onclick="toggleDislike({{ comment.Id }})">
                                        <i class="fas fa-thumbs-down"></i>
                                        <span class="count">{{ comment.DislikesCount | default: 0 }}</span>
                                    </button>
                                    
                                    {% if User.Identity.IsAuthenticated %}
                                        <button class="action-btn reply-btn" 
                                                onclick="showReplyForm({{ comment.Id }})">
                                            <i class="fas fa-reply"></i>
                                            Trả lời
                                        </button>
                                    {% endif %}
                                    
                                    {% if comment.Author.Id == User.Id or User.IsAdmin %}
                                        <div class="dropdown">
                                            <button class="action-btn dropdown-toggle" 
                                                    data-toggle="dropdown">
                                                <i class="fas fa-ellipsis-h"></i>
                                            </button>
                                            <div class="dropdown-menu">
                                                {% if comment.Author.Id == User.Id %}
                                                    <a class="dropdown-item" 
                                                       onclick="editComment({{ comment.Id }})">
                                                        <i class="fas fa-edit"></i> Chỉnh sửa
                                                    </a>
                                                {% endif %}
                                                <a class="dropdown-item text-danger" 
                                                   onclick="deleteComment({{ comment.Id }})">
                                                    <i class="fas fa-trash"></i> Xóa
                                                </a>
                                                {% unless comment.Author.Id == User.Id %}
                                                    <a class="dropdown-item" 
                                                       onclick="reportComment({{ comment.Id }})">
                                                        <i class="fas fa-flag"></i> Báo cáo
                                                    </a>
                                                {% endunless %}
                                            </div>
                                        </div>
                                    {% endif %}
                                </div>
                            </div>

                            <!-- Reply Form (Hidden by default) -->
                            <div class="reply-form" id="replyForm{{ comment.Id }}" style="display: none;">
                                <!-- Reply form will be inserted here -->
                            </div>

                            <!-- Replies -->
                            {% if comment.Replies.size > 0 %}
                                <div class="comment-replies">
                                    {% if comment.Replies.size > 3 %}
                                        <button class="show-more-replies" 
                                                onclick="loadMoreReplies({{ comment.Id }})">
                                            <i class="fas fa-chevron-down"></i>
                                            Xem {{ comment.Replies.size }} phản hồi
                                        </button>
                                    {% endif %}
                                    
                                    <div class="replies-list">
                                        {% for reply in comment.Replies limit: 3 %}
                                            <!-- Same structure as main comment but smaller -->
                                            <div class="comment-item reply-item" data-comment-id="{{ reply.Id }}">
                                                <!-- Reply content similar to main comment -->
                                            </div>
                                        {% endfor %}
                                    </div>
                                </div>
                            {% endif %}
                        </div>
                    </div>
                {% endfor %}
            </div>

            <!-- Load More Comments -->
            {% if Model.HasMoreComments %}
                <div class="load-more-section">
                    <button class="btn btn-outline btn-block" onclick="loadMoreComments()">
                        <i class="fas fa-chevron-down"></i>
                        Xem thêm bình luận
                    </button>
                </div>
            {% endif %}
        {% else %}
            <div class="empty-comments">
                <i class="fas fa-comments"></i>
                <h4>Chưa có bình luận nào</h4>
                <p>Hãy là người đầu tiên chia sẻ suy nghĩ của bạn!</p>
            </div>
        {% endif %}
    </div>
</div>

<style>
.comment-widget {
    margin: 2rem 0;
}

.comment-stats {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
    padding-bottom: 1rem;
    border-bottom: 2px solid var(--border-color);
}

.comment-title {
    margin: 0;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    color: var(--text-primary);
}

.comment-summary {
    display: flex;
    align-items: center;
    gap: 1rem;
}

.rating-summary {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.stars {
    display: flex;
    gap: 0.125rem;
}

.stars i {
    color: var(--warning-color);
    font-size: var(--font-size-sm);
}

.rating-text {
    font-size: var(--font-size-sm);
    color: var(--text-muted);
}

.comment-form-section {
    background-color: var(--bg-secondary);
    border-radius: var(--border-radius-lg);
    padding: 1.5rem;
    margin-bottom: 2rem;
}

.comment-form .form-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
}

.user-avatar {
    flex: 0 0 40px;
}

.user-avatar img,
.user-avatar .avatar-placeholder {
    width: 40px;
    height: 40px;
    border-radius: 50%;
}

.user-avatar .avatar-placeholder {
    background-color: var(--bg-primary);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-muted);
}

.user-info {
    display: flex;
    flex-direction: column;
}

.user-name {
    font-weight: 600;
    color: var(--text-primary);
}

.user-role {
    font-size: var(--font-size-sm);
    color: var(--text-muted);
}

.rating-input {
    margin-bottom: 1rem;
}

.star-rating {
    display: flex;
    gap: 0.25rem;
    margin-top: 0.5rem;
}

.star-rating i {
    font-size: var(--font-size-lg);
    color: var(--text-muted);
    cursor: pointer;
    transition: var(--transition-fast);
}

.star-rating i:hover,
.star-rating i.active {
    color: var(--warning-color);
}

.comment-textarea {
    resize: vertical;
    min-height: 100px;
}

.textarea-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 0.5rem;
}

.character-count {
    font-size: var(--font-size-sm);
    color: var(--text-muted);
}

.character-count .current.warning {
    color: var(--warning-color);
}

.character-count .current.error {
    color: var(--error-color);
}

.form-actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 1rem;
}

.submit-actions {
    display: flex;
    gap: 0.5rem;
}

.login-prompt {
    background-color: var(--bg-secondary);
    border-radius: var(--border-radius-lg);
    padding: 2rem;
    text-align: center;
    margin-bottom: 2rem;
}

.prompt-content i {
    font-size: 2rem;
    color: var(--primary-color);
    margin-bottom: 1rem;
}

.prompt-content h4 {
    margin-bottom: 0.5rem;
    color: var(--text-primary);
}

.prompt-content p {
    color: var(--text-secondary);
    margin-bottom: 1.5rem;
}

.prompt-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
}

.comments-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--border-light);
}

.sort-options {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: var(--font-size-sm);
}

.sort-options select {
    width: auto;
    min-width: 120px;
}

.comments-list {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.comment-item {
    display: flex;
    gap: 1rem;
    padding: 1.5rem;
    background-color: var(--bg-primary);
    border-radius: var(--border-radius-lg);
    box-shadow: var(--shadow-sm);
    transition: var(--transition);
}

.comment-item:hover {
    box-shadow: var(--shadow-md);
}

.comment-avatar {
    flex: 0 0 48px;
}

.comment-avatar img,
.comment-avatar .avatar-placeholder {
    width: 48px;
    height: 48px;
    border-radius: 50%;
}

.comment-avatar .avatar-placeholder {
    background-color: var(--bg-secondary);
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--text-muted);
}

.comment-content {
    flex: 1;
    min-width: 0;
}

.comment-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 0.75rem;
}

.author-info {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.author-name {
    font-weight: 600;
    color: var(--text-primary);
}

.verified {
    color: var(--primary-color);
    font-size: var(--font-size-sm);
}

.author-role {
    font-size: var(--font-size-xs);
    color: var(--text-muted);
    padding: 0.125rem 0.5rem;
    background-color: var(--bg-secondary);
    border-radius: var(--border-radius-full);
}

.comment-meta {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    font-size: var(--font-size-sm);
    color: var(--text-muted);
}

.comment-rating {
    display: flex;
    gap: 0.125rem;
}

.comment-rating i {
    color: var(--warning-color);
    font-size: var(--font-size-xs);
}

.edited-indicator {
    color: var(--text-muted);
}

.comment-body {
    margin-bottom: 1rem;
}

.comment-text {
    line-height: 1.6;
    color: var(--text-secondary);
}

.comment-text p:last-child {
    margin-bottom: 0;
}

.comment-attachments {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 1rem;
}

.attachment-image {
    max-width: 200px;
    max-height: 150px;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: var(--transition);
}

.attachment-image:hover {
    transform: scale(1.02);
}

.attachment-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    background-color: var(--bg-secondary);
    border-radius: var(--border-radius);
    text-decoration: none;
    color: var(--text-primary);
    font-size: var(--font-size-sm);
    transition: var(--transition-fast);
}

.attachment-link:hover {
    background-color: var(--primary-color);
    color: var(--text-light);
    text-decoration: none;
}

.comment-actions {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.action-buttons {
    display: flex;
    gap: 1rem;
}

.action-btn {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    padding: 0.5rem 0.75rem;
    background: none;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    color: var(--text-muted);
    font-size: var(--font-size-sm);
    cursor: pointer;
    transition: var(--transition-fast);
}

.action-btn:hover {
    background-color: var(--bg-secondary);
    color: var(--text-primary);
}

.action-btn.active {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
    color: var(--text-light);
}

.like-btn.active {
    background-color: var(--success-color);
    border-color: var(--success-color);
}

.dislike-btn.active {
    background-color: var(--error-color);
    border-color: var(--error-color);
}

.comment-replies {
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid var(--border-light);
}

.show-more-replies {
    background: none;
    border: none;
    color: var(--primary-color);
    font-size: var(--font-size-sm);
    cursor: pointer;
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.replies-list {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.reply-item {
    background-color: var(--bg-secondary);
    padding: 1rem;
    margin-left: 2rem;
}

.reply-item .comment-avatar {
    flex: 0 0 36px;
}

.reply-item .comment-avatar img,
.reply-item .comment-avatar .avatar-placeholder {
    width: 36px;
    height: 36px;
}

.load-more-section {
    margin-top: 2rem;
    text-align: center;
}

.empty-comments {
    text-align: center;
    padding: 3rem 2rem;
    color: var(--text-muted);
}

.empty-comments i {
    font-size: 3rem;
    margin-bottom: 1rem;
}

.empty-comments h4 {
    margin-bottom: 0.5rem;
    color: var(--text-primary);
}

@media (max-width: 768px) {
    .comment-stats {
        flex-direction: column;
        gap: 1rem;
        text-align: center;
    }
    
    .comment-header {
        flex-direction: column;
        gap: 0.5rem;
    }
    
    .author-info {
        flex-wrap: wrap;
    }
    
    .comment-meta {
        justify-content: center;
    }
    
    .action-buttons {
        flex-wrap: wrap;
        gap: 0.5rem;
    }
    
    .reply-item {
        margin-left: 1rem;
    }
    
    .prompt-actions {
        flex-direction: column;
        align-items: center;
    }
}
</style>

<script>
// Star rating functionality
document.querySelectorAll('.star-rating').forEach(rating => {
    const stars = rating.querySelectorAll('i');
    const input = rating.parentElement.querySelector('input[name="rating"]');
    
    stars.forEach((star, index) => {
        star.addEventListener('click', () => {
            const value = index + 1;
            input.value = value;
            rating.dataset.rating = value;
            
            stars.forEach((s, i) => {
                if (i < value) {
                    s.classList.remove('far');
                    s.classList.add('fas', 'active');
                } else {
                    s.classList.remove('fas', 'active');
                    s.classList.add('far');
                }
            });
        });
        
        star.addEventListener('mouseenter', () => {
            const value = index + 1;
            stars.forEach((s, i) => {
                if (i < value) {
                    s.classList.add('active');
                } else {
                    s.classList.remove('active');
                }
            });
        });
    });
    
    rating.addEventListener('mouseleave', () => {
        const currentRating = parseInt(rating.dataset.rating) || 0;
        stars.forEach((s, i) => {
            if (i < currentRating) {
                s.classList.add('active');
            } else {
                s.classList.remove('active');
            }
        });
    });
});

// Character count
document.querySelectorAll('.comment-textarea').forEach(textarea => {
    const counter = textarea.parentElement.querySelector('.character-count .current');
    const maxLength = 1000;
    
    textarea.addEventListener('input', () => {
        const length = textarea.value.length;
        counter.textContent = length;
        
        counter.classList.remove('warning', 'error');
        if (length > maxLength * 0.8) {
            counter.classList.add('warning');
        }
        if (length > maxLength) {
            counter.classList.add('error');
        }
    });
});

// Comment form submission
document.getElementById('commentForm')?.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const submitBtn = this.querySelector('button[type="submit"]');
    const originalText = submitBtn.innerHTML;
    
    // Show loading state
    submitBtn.innerHTML = '<span class="spinner"></span> Đang gửi...';
    submitBtn.disabled = true;
    
    // Simulate API call
    setTimeout(() => {
        // Reset form
        this.reset();
        document.querySelector('.star-rating').dataset.rating = '0';
        document.querySelectorAll('.star-rating i').forEach(star => {
            star.classList.remove('fas', 'active');
            star.classList.add('far');
        });
        
        // Reset button
        submitBtn.innerHTML = originalText;
        submitBtn.disabled = false;
        
        // Show success message
        alert('Bình luận đã được gửi thành công!');
        
        // Reload comments (in real app, this would be handled differently)
        location.reload();
    }, 1000);
});

// Toggle like/dislike
function toggleLike(commentId) {
    const btn = event.target.closest('.like-btn');
    const count = btn.querySelector('.count');
    const currentCount = parseInt(count.textContent) || 0;
    
    if (btn.classList.contains('active')) {
        btn.classList.remove('active');
        count.textContent = Math.max(0, currentCount - 1);
    } else {
        btn.classList.add('active');
        count.textContent = currentCount + 1;
        
        // Remove dislike if active
        const dislikeBtn = btn.parentElement.querySelector('.dislike-btn');
        if (dislikeBtn.classList.contains('active')) {
            dislikeBtn.classList.remove('active');
            const dislikeCount = dislikeBtn.querySelector('.count');
            dislikeCount.textContent = Math.max(0, parseInt(dislikeCount.textContent) - 1);
        }
    }
}

function toggleDislike(commentId) {
    const btn = event.target.closest('.dislike-btn');
    const count = btn.querySelector('.count');
    const currentCount = parseInt(count.textContent) || 0;
    
    if (btn.classList.contains('active')) {
        btn.classList.remove('active');
        count.textContent = Math.max(0, currentCount - 1);
    } else {
        btn.classList.add('active');
        count.textContent = currentCount + 1;
        
        // Remove like if active
        const likeBtn = btn.parentElement.querySelector('.like-btn');
        if (likeBtn.classList.contains('active')) {
            likeBtn.classList.remove('active');
            const likeCount = likeBtn.querySelector('.count');
            likeCount.textContent = Math.max(0, parseInt(likeCount.textContent) - 1);
        }
    }
}

// Show reply form
function showReplyForm(commentId) {
    const replyForm = document.getElementById(`replyForm${commentId}`);
    if (replyForm.style.display === 'none') {
        replyForm.style.display = 'block';
        replyForm.innerHTML = `
            <form class="reply-form-content">
                <textarea class="form-control" placeholder="Viết phản hồi..." rows="3"></textarea>
                <div class="reply-actions">
                    <button type="button" class="btn btn-outline btn-sm" onclick="hideReplyForm(${commentId})">Hủy</button>
                    <button type="submit" class="btn btn-primary btn-sm">Gửi</button>
                </div>
            </form>
        `;
    } else {
        replyForm.style.display = 'none';
    }
}

function hideReplyForm(commentId) {
    const replyForm = document.getElementById(`replyForm${commentId}`);
    replyForm.style.display = 'none';
}

// Other functions
function editComment(commentId) {
    console.log('Edit comment:', commentId);
}

function deleteComment(commentId) {
    if (confirm('Bạn có chắc chắn muốn xóa bình luận này?')) {
        console.log('Delete comment:', commentId);
    }
}

function reportComment(commentId) {
    console.log('Report comment:', commentId);
}

function loadMoreComments() {
    console.log('Load more comments');
}

function loadMoreReplies(commentId) {
    console.log('Load more replies for comment:', commentId);
}

function openImageModal(imageUrl) {
    // Open image in modal or lightbox
    console.log('Open image:', imageUrl);
}

function cancelComment() {
    document.getElementById('commentForm').reset();
}
</script>