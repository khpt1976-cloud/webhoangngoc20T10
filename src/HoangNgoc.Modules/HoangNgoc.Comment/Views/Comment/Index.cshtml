@model HoangNgoc.Comment.ViewModels.CommentListViewModel
@{
    ViewData["Title"] = "Comments";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Comments</h2>
            
            <!-- Search and Filter Form -->
            <form method="get" class="mb-4">
                <div class="row">
                    <div class="col-md-4">
                        <input type="text" name="search" value="@Model.SearchTerm" class="form-control" placeholder="Search comments..." />
                    </div>
                    <div class="col-md-3">
                        <select name="status" class="form-control">
                            <option value="">All Status</option>
                            <option value="Pending" selected="@(Model.StatusFilter == "Pending")">Pending</option>
                            <option value="Approved" selected="@(Model.StatusFilter == "Approved")">Approved</option>
                            <option value="Rejected" selected="@(Model.StatusFilter == "Rejected")">Rejected</option>
                            <option value="Spam" selected="@(Model.StatusFilter == "Spam")">Spam</option>
                        </select>
                    </div>
                    <div class="col-md-2">
                        <button type="submit" class="btn btn-primary">Search</button>
                    </div>
                </div>
            </form>

            <!-- Comments List -->
            @if (Model.Comments.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Author</th>
                                <th>Content</th>
                                <th>Date</th>
                                <th>Status</th>
                                <th>Rating</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var comment in Model.Comments)
                            {
                                <tr>
                                    <td>
                                        <strong>@comment.AuthorName</strong><br />
                                        <small class="text-muted">@comment.AuthorEmail</small>
                                    </td>
                                    <td>
                                        <div class="comment-content">
                                            @Html.Raw(comment.CommentContent.Length > 100 ? 
                                                comment.CommentContent.Substring(0, 100) + "..." : 
                                                comment.CommentContent)
                                        </div>
                                    </td>
                                    <td>@comment.CommentDate.ToString("MMM dd, yyyy HH:mm")</td>
                                    <td>
                                        <span class="badge badge-@(comment.Status.ToLower() == "approved" ? "success" : 
                                                                   comment.Status.ToLower() == "rejected" ? "danger" : 
                                                                   comment.Status.ToLower() == "spam" ? "warning" : "secondary")">
                                            @comment.Status
                                        </span>
                                    </td>
                                    <td>
                                        @if (comment.Rating > 0)
                                        {
                                            <div class="rating">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    <span class="@(i <= comment.Rating ? "text-warning" : "text-muted")">â˜…</span>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <span class="text-muted">No rating</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a href="@Url.Action("Details", new { id = comment.CommentId })" class="btn btn-sm btn-info">View</a>
                                            
                                            @if (comment.Status != "Approved")
                                            {
                                                <form method="post" action="@Url.Action("Moderate")" style="display: inline;">
                                                    <input type="hidden" name="id" value="@comment.CommentId" />
                                                    <input type="hidden" name="action" value="approve" />
                                                    <button type="submit" class="btn btn-sm btn-success">Approve</button>
                                                </form>
                                            }
                                            
                                            @if (comment.Status != "Rejected")
                                            {
                                                <form method="post" action="@Url.Action("Moderate")" style="display: inline;">
                                                    <input type="hidden" name="id" value="@comment.CommentId" />
                                                    <input type="hidden" name="action" value="reject" />
                                                    <button type="submit" class="btn btn-sm btn-warning">Reject</button>
                                                </form>
                                            }
                                            
                                            <form method="post" action="@Url.Action("Delete")" style="display: inline;" 
                                                  onsubmit="return confirm('Are you sure you want to delete this comment?');">
                                                <input type="hidden" name="id" value="@comment.CommentId" />
                                                <button type="submit" class="btn btn-sm btn-danger">Delete</button>
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if (Model.TotalComments > Model.PageSize)
                {
                    <nav aria-label="Comments pagination">
                        <ul class="pagination">
                            @{
                                var totalPages = (int)Math.Ceiling((double)Model.TotalComments / Model.PageSize);
                                var currentPage = Model.Page;
                            }
                            
                            @if (currentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { page = currentPage - 1, search = Model.SearchTerm, status = Model.StatusFilter })">Previous</a>
                                </li>
                            }
                            
                            @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                            {
                                <li class="page-item @(i == currentPage ? "active" : "")">
                                    <a class="page-link" href="@Url.Action("Index", new { page = i, search = Model.SearchTerm, status = Model.StatusFilter })">@i</a>
                                </li>
                            }
                            
                            @if (currentPage < totalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" href="@Url.Action("Index", new { page = currentPage + 1, search = Model.SearchTerm, status = Model.StatusFilter })">Next</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="alert alert-info">
                    <h4>No comments found</h4>
                    <p>There are no comments matching your criteria.</p>
                </div>
            }
        </div>
    </div>
</div>