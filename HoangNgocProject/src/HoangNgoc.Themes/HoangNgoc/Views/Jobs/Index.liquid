{% comment %}
Jobs Index Page - HoangNgoc Professional Theme
Public Job Listing Page with Search, Filter, and Pagination
{% endcomment %}

{% zone "Header" %}
    <!-- Jobs Hero Section -->
    <header class="jobs-hero bg-gradient-primary text-white">
        <div class="container px-4 px-lg-5">
            <div class="row gx-4 gx-lg-5 justify-content-center">
                <div class="col-lg-10 col-xl-8 text-center py-5">
                    <h1 class="display-4 fw-bold mb-4">Find Your Dream Job</h1>
                    <p class="lead mb-5">Discover amazing career opportunities with top companies</p>
                    
                    <!-- Hero Search Form -->
                    <form class="hero-search-form" method="get" action="/jobs">
                        <div class="row g-3 justify-content-center">
                            <div class="col-md-4">
                                <div class="input-group">
                                    <span class="input-group-text bg-white">
                                        <i class="fas fa-search text-muted"></i>
                                    </span>
                                    <input type="text" name="q" class="form-control form-control-lg" 
                                           placeholder="Job title, keywords..." 
                                           value="{{ Request.Query.q }}" />
                                </div>
                            </div>
                            <div class="col-md-3">
                                <select name="location" class="form-select form-select-lg">
                                    <option value="">All Locations</option>
                                    <option value="hanoi" {% if Request.Query.location == "hanoi" %}selected{% endif %}>Hanoi</option>
                                    <option value="hcm" {% if Request.Query.location == "hcm" %}selected{% endif %}>Ho Chi Minh City</option>
                                    <option value="danang" {% if Request.Query.location == "danang" %}selected{% endif %}>Da Nang</option>
                                    <option value="remote" {% if Request.Query.location == "remote" %}selected{% endif %}>Remote</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <button type="submit" class="btn btn-warning btn-lg w-100">
                                    <i class="fas fa-search me-2"></i>Search
                                </button>
                            </div>
                        </div>
                    </form>
                    
                    <!-- Quick Stats -->
                    <div class="hero-stats mt-5">
                        <div class="row g-4 text-center">
                            <div class="col-6 col-md-3">
                                <div class="stat-item">
                                    <div class="stat-number display-6 fw-bold text-warning">{{ Model.TotalJobs | default: "150+" }}</div>
                                    <div class="stat-label text-white-75">Active Jobs</div>
                                </div>
                            </div>
                            <div class="col-6 col-md-3">
                                <div class="stat-item">
                                    <div class="stat-number display-6 fw-bold text-warning">{{ Model.TotalCompanies | default: "50+" }}</div>
                                    <div class="stat-label text-white-75">Companies</div>
                                </div>
                            </div>
                            <div class="col-6 col-md-3">
                                <div class="stat-item">
                                    <div class="stat-number display-6 fw-bold text-warning">{{ Model.TotalApplications | default: "1000+" }}</div>
                                    <div class="stat-label text-white-75">Applications</div>
                                </div>
                            </div>
                            <div class="col-6 col-md-3">
                                <div class="stat-item">
                                    <div class="stat-number display-6 fw-bold text-warning">{{ Model.SuccessRate | default: "85%" }}</div>
                                    <div class="stat-label text-white-75">Success Rate</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
{% endzone %}

<!-- Jobs Listing Section -->
<section class="jobs-listing py-5">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5">
            <!-- Filters Sidebar -->
            <div class="col-lg-3 mb-4">
                <div class="filters-sidebar">
                    <div class="card shadow-sm">
                        <div class="card-header bg-primary text-white">
                            <h5 class="mb-0">
                                <i class="fas fa-filter me-2"></i>Filter Jobs
                            </h5>
                        </div>
                        <div class="card-body">
                            <form method="get" action="/jobs" id="filter-form">
                                <!-- Keep search query -->
                                {% if Request.Query.q %}
                                <input type="hidden" name="q" value="{{ Request.Query.q }}" />
                                {% endif %}
                                
                                <!-- Job Type Filter -->
                                <div class="filter-group mb-4">
                                    <h6 class="filter-title">Job Type</h6>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="type" value="fulltime" id="fulltime"
                                               {% if Request.Query.type contains "fulltime" %}checked{% endif %}>
                                        <label class="form-check-label" for="fulltime">Full-time</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="type" value="parttime" id="parttime"
                                               {% if Request.Query.type contains "parttime" %}checked{% endif %}>
                                        <label class="form-check-label" for="parttime">Part-time</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="type" value="contract" id="contract"
                                               {% if Request.Query.type contains "contract" %}checked{% endif %}>
                                        <label class="form-check-label" for="contract">Contract</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="type" value="internship" id="internship"
                                               {% if Request.Query.type contains "internship" %}checked{% endif %}>
                                        <label class="form-check-label" for="internship">Internship</label>
                                    </div>
                                </div>
                                
                                <!-- Experience Level Filter -->
                                <div class="filter-group mb-4">
                                    <h6 class="filter-title">Experience Level</h6>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="experience" value="entry" id="entry"
                                               {% if Request.Query.experience contains "entry" %}checked{% endif %}>
                                        <label class="form-check-label" for="entry">Entry Level</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="experience" value="mid" id="mid"
                                               {% if Request.Query.experience contains "mid" %}checked{% endif %}>
                                        <label class="form-check-label" for="mid">Mid Level</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="experience" value="senior" id="senior"
                                               {% if Request.Query.experience contains "senior" %}checked{% endif %}>
                                        <label class="form-check-label" for="senior">Senior Level</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="experience" value="executive" id="executive"
                                               {% if Request.Query.experience contains "executive" %}checked{% endif %}>
                                        <label class="form-check-label" for="executive">Executive</label>
                                    </div>
                                </div>
                                
                                <!-- Salary Range Filter -->
                                <div class="filter-group mb-4">
                                    <h6 class="filter-title">Salary Range (VND)</h6>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="salary" value="under-10m" id="under-10m"
                                               {% if Request.Query.salary contains "under-10m" %}checked{% endif %}>
                                        <label class="form-check-label" for="under-10m">Under 10M</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="salary" value="10m-20m" id="10m-20m"
                                               {% if Request.Query.salary contains "10m-20m" %}checked{% endif %}>
                                        <label class="form-check-label" for="10m-20m">10M - 20M</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="salary" value="20m-30m" id="20m-30m"
                                               {% if Request.Query.salary contains "20m-30m" %}checked{% endif %}>
                                        <label class="form-check-label" for="20m-30m">20M - 30M</label>
                                    </div>
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" name="salary" value="over-30m" id="over-30m"
                                               {% if Request.Query.salary contains "over-30m" %}checked{% endif %}>
                                        <label class="form-check-label" for="over-30m">Over 30M</label>
                                    </div>
                                </div>
                                
                                <!-- Category Filter -->
                                <div class="filter-group mb-4">
                                    <h6 class="filter-title">Category</h6>
                                    <select name="category" class="form-select">
                                        <option value="">All Categories</option>
                                        <option value="it" {% if Request.Query.category == "it" %}selected{% endif %}>Information Technology</option>
                                        <option value="marketing" {% if Request.Query.category == "marketing" %}selected{% endif %}>Marketing</option>
                                        <option value="sales" {% if Request.Query.category == "sales" %}selected{% endif %}>Sales</option>
                                        <option value="finance" {% if Request.Query.category == "finance" %}selected{% endif %}>Finance</option>
                                        <option value="hr" {% if Request.Query.category == "hr" %}selected{% endif %}>Human Resources</option>
                                        <option value="design" {% if Request.Query.category == "design" %}selected{% endif %}>Design</option>
                                    </select>
                                </div>
                                
                                <!-- Filter Actions -->
                                <div class="filter-actions">
                                    <button type="submit" class="btn btn-primary w-100 mb-2">
                                        <i class="fas fa-search me-2"></i>Apply Filters
                                    </button>
                                    <a href="/jobs" class="btn btn-outline-secondary w-100">
                                        <i class="fas fa-times me-2"></i>Clear All
                                    </a>
                                </div>
                            </form>
                        </div>
                    </div>
                    
                    <!-- Job Alerts Card -->
                    <div class="card shadow-sm mt-4">
                        <div class="card-header bg-success text-white">
                            <h6 class="mb-0">
                                <i class="fas fa-bell me-2"></i>Job Alerts
                            </h6>
                        </div>
                        <div class="card-body text-center">
                            <p class="card-text small mb-3">Get notified about new jobs matching your criteria</p>
                            <button class="btn btn-success btn-sm w-100" onclick="setupJobAlerts()">
                                <i class="fas fa-plus me-2"></i>Create Alert
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Jobs List -->
            <div class="col-lg-9">
                <!-- Results Header -->
                <div class="results-header mb-4">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <h2 class="h4 mb-0">
                                {% if Request.Query.q %}
                                    Search Results for "{{ Request.Query.q }}"
                                {% else %}
                                    Available Jobs
                                {% endif %}
                            </h2>
                            <p class="text-muted mb-0">
                                {{ Model.ContentItems | size }} jobs found
                                {% if Model.TotalCount and Model.TotalCount > Model.ContentItems.size %}
                                    ({{ Model.TotalCount }} total)
                                {% endif %}
                            </p>
                        </div>
                        <div class="col-md-6">
                            <div class="d-flex justify-content-md-end gap-2">
                                <!-- Sort Options -->
                                <select name="sort" class="form-select form-select-sm" style="width: auto;" onchange="updateSort(this.value)">
                                    <option value="newest" {% if Request.Query.sort == "newest" or Request.Query.sort == blank %}selected{% endif %}>Newest First</option>
                                    <option value="oldest" {% if Request.Query.sort == "oldest" %}selected{% endif %}>Oldest First</option>
                                    <option value="salary-high" {% if Request.Query.sort == "salary-high" %}selected{% endif %}>Salary: High to Low</option>
                                    <option value="salary-low" {% if Request.Query.sort == "salary-low" %}selected{% endif %}>Salary: Low to High</option>
                                    <option value="company" {% if Request.Query.sort == "company" %}selected{% endif %}>Company A-Z</option>
                                </select>
                                
                                <!-- View Toggle -->
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-outline-secondary btn-sm active" onclick="setView('grid')">
                                        <i class="fas fa-th-large"></i>
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary btn-sm" onclick="setView('list')">
                                        <i class="fas fa-list"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Jobs Grid -->
                <div class="jobs-grid" id="jobs-container">
                    {% if Model.ContentItems and Model.ContentItems.size > 0 %}
                        <div class="row g-4" id="jobs-list">
                            {% for job in Model.ContentItems %}
                                <div class="col-12 col-md-6 col-xl-4 job-item">
                                    {{ job | shape_build_display: "Summary" | shape_render }}
                                </div>
                            {% endfor %}
                        </div>
                    {% else %}
                        <!-- No Jobs Found -->
                        <div class="no-jobs-found text-center py-5">
                            <div class="mb-4">
                                <i class="fas fa-search fa-4x text-muted"></i>
                            </div>
                            <h3 class="h4 mb-3">No Jobs Found</h3>
                            <p class="text-muted mb-4">
                                {% if Request.Query.q %}
                                    We couldn't find any jobs matching "{{ Request.Query.q }}". Try adjusting your search criteria.
                                {% else %}
                                    There are no jobs available at the moment. Please check back later.
                                {% endif %}
                            </p>
                            <div class="d-flex justify-content-center gap-2">
                                <a href="/jobs" class="btn btn-primary">
                                    <i class="fas fa-refresh me-2"></i>View All Jobs
                                </a>
                                <button class="btn btn-outline-primary" onclick="setupJobAlerts()">
                                    <i class="fas fa-bell me-2"></i>Create Job Alert
                                </button>
                            </div>
                        </div>
                    {% endif %}
                </div>
                
                <!-- Load More / Pagination -->
                {% if Model.Pager %}
                    <div class="pagination-container mt-5">
                        {{ Model.Pager | shape_render }}
                    </div>
                {% endif %}
                
                <!-- Load More Button (for AJAX loading) -->
                {% if Model.HasMoreJobs %}
                <div class="text-center mt-4">
                    <button class="btn btn-outline-primary btn-lg" id="load-more-btn" onclick="loadMoreJobs()">
                        <i class="fas fa-plus me-2"></i>Load More Jobs
                        <span class="spinner-border spinner-border-sm ms-2 d-none" role="status"></span>
                    </button>
                </div>
                {% endif %}
            </div>
        </div>
    </div>
</section>

<!-- Featured Companies Section -->
<section class="featured-companies bg-light py-5">
    <div class="container px-4 px-lg-5">
        <div class="text-center mb-5">
            <h3 class="h2 mb-3">Featured Companies</h3>
            <p class="text-muted">Join thousands of professionals working at these amazing companies</p>
        </div>
        <div class="row g-4">
            <div class="col-6 col-md-3 col-lg-2">
                <div class="company-logo text-center p-3">
                    <img src="/images/companies/company1.png" alt="Company 1" class="img-fluid" style="max-height: 60px;">
                </div>
            </div>
            <div class="col-6 col-md-3 col-lg-2">
                <div class="company-logo text-center p-3">
                    <img src="/images/companies/company2.png" alt="Company 2" class="img-fluid" style="max-height: 60px;">
                </div>
            </div>
            <div class="col-6 col-md-3 col-lg-2">
                <div class="company-logo text-center p-3">
                    <img src="/images/companies/company3.png" alt="Company 3" class="img-fluid" style="max-height: 60px;">
                </div>
            </div>
            <div class="col-6 col-md-3 col-lg-2">
                <div class="company-logo text-center p-3">
                    <img src="/images/companies/company4.png" alt="Company 4" class="img-fluid" style="max-height: 60px;">
                </div>
            </div>
            <div class="col-6 col-md-3 col-lg-2">
                <div class="company-logo text-center p-3">
                    <img src="/images/companies/company5.png" alt="Company 5" class="img-fluid" style="max-height: 60px;">
                </div>
            </div>
            <div class="col-6 col-md-3 col-lg-2">
                <div class="company-logo text-center p-3">
                    <img src="/images/companies/company6.png" alt="Company 6" class="img-fluid" style="max-height: 60px;">
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Custom Styles -->
<style>
.jobs-hero {
    background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
    position: relative;
    overflow: hidden;
}

.jobs-hero::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><defs><pattern id="grain" width="100" height="100" patternUnits="userSpaceOnUse"><circle cx="25" cy="25" r="1" fill="rgba(255,255,255,0.1)"/><circle cx="75" cy="75" r="1" fill="rgba(255,255,255,0.1)"/></pattern></defs><rect width="100" height="100" fill="url(%23grain)"/></svg>');
    opacity: 0.3;
}

.hero-search-form {
    position: relative;
    z-index: 2;
}

.hero-search-form .form-control,
.hero-search-form .form-select {
    border: none;
    box-shadow: 0 4px 15px rgba(0,0,0,0.1);
}

.hero-stats .stat-item {
    animation: fadeInUp 0.8s ease-out;
}

.hero-stats .stat-item:nth-child(1) { animation-delay: 0.1s; }
.hero-stats .stat-item:nth-child(2) { animation-delay: 0.2s; }
.hero-stats .stat-item:nth-child(3) { animation-delay: 0.3s; }
.hero-stats .stat-item:nth-child(4) { animation-delay: 0.4s; }

.filters-sidebar .card {
    position: sticky;
    top: 20px;
}

.filter-group {
    border-bottom: 1px solid #eee;
    padding-bottom: 1rem;
}

.filter-group:last-child {
    border-bottom: none;
    padding-bottom: 0;
}

.filter-title {
    font-weight: 600;
    color: #495057;
    margin-bottom: 0.75rem;
}

.form-check {
    margin-bottom: 0.5rem;
}

.form-check-label {
    font-size: 0.9rem;
    cursor: pointer;
}

.results-header {
    border-bottom: 2px solid #f8f9fa;
    padding-bottom: 1rem;
}

.jobs-grid .job-item {
    transition: all 0.3s ease;
}

.no-jobs-found {
    background: #f8f9fa;
    border-radius: 10px;
    margin: 2rem 0;
}

.company-logo {
    background: white;
    border-radius: 10px;
    transition: transform 0.3s ease;
    border: 1px solid #eee;
}

.company-logo:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px rgba(0,0,0,0.1);
}

/* List View Styles */
.jobs-grid.list-view .job-item {
    flex: 0 0 100%;
    max-width: 100%;
}

.jobs-grid.list-view .job-preview {
    display: flex;
    align-items: center;
}

.jobs-grid.list-view .card-body {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

/* Loading States */
.loading .job-item {
    opacity: 0.6;
    pointer-events: none;
}

.skeleton-loader {
    background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
    background-size: 200% 100%;
    animation: loading 1.5s infinite;
}

@keyframes loading {
    0% { background-position: 200% 0; }
    100% { background-position: -200% 0; }
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Responsive Design */
@media (max-width: 768px) {
    .hero-search-form .row > div {
        margin-bottom: 1rem;
    }
    
    .hero-search-form .col-md-2 .btn {
        width: 100%;
    }
    
    .results-header .row > div {
        margin-bottom: 1rem;
    }
    
    .results-header .d-flex {
        justify-content: center !important;
    }
    
    .filters-sidebar {
        margin-bottom: 2rem;
    }
    
    .filters-sidebar .card {
        position: static;
    }
}
</style>

<!-- JavaScript for Jobs Listing -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    initializeJobsPage();
});

function initializeJobsPage() {
    // Initialize filter form
    const filterForm = document.getElementById('filter-form');
    if (filterForm) {
        // Auto-submit on filter change
        filterForm.addEventListener('change', function(e) {
            if (e.target.type === 'checkbox' || e.target.tagName === 'SELECT') {
                setTimeout(() => this.submit(), 300);
            }
        });
    }
    
    // Initialize search form
    const searchForm = document.querySelector('.hero-search-form');
    if (searchForm) {
        searchForm.addEventListener('submit', function(e) {
            const searchInput = this.querySelector('input[name="q"]');
            if (searchInput.value.trim() === '') {
                e.preventDefault();
                searchInput.focus();
            }
        });
    }
    
    // Initialize view toggle
    const viewButtons = document.querySelectorAll('[onclick^="setView"]');
    viewButtons.forEach(btn => {
        btn.addEventListener('click', function() {
            viewButtons.forEach(b => b.classList.remove('active'));
            this.classList.add('active');
        });
    });
}

function updateSort(sortValue) {
    const url = new URL(window.location);
    url.searchParams.set('sort', sortValue);
    window.location.href = url.toString();
}

function setView(viewType) {
    const jobsGrid = document.querySelector('.jobs-grid');
    const jobsList = document.getElementById('jobs-list');
    
    if (viewType === 'list') {
        jobsGrid.classList.add('list-view');
        jobsList.classList.remove('row');
        jobsList.classList.add('d-flex', 'flex-column', 'gap-3');
    } else {
        jobsGrid.classList.remove('list-view');
        jobsList.classList.add('row');
        jobsList.classList.remove('d-flex', 'flex-column', 'gap-3');
    }
    
    // Save preference
    localStorage.setItem('jobsViewType', viewType);
}

function loadMoreJobs() {
    const loadMoreBtn = document.getElementById('load-more-btn');
    const spinner = loadMoreBtn.querySelector('.spinner-border');
    const jobsList = document.getElementById('jobs-list');
    
    // Show loading state
    loadMoreBtn.disabled = true;
    spinner.classList.remove('d-none');
    
    // Get current page
    const url = new URL(window.location);
    const currentPage = parseInt(url.searchParams.get('page') || '1');
    const nextPage = currentPage + 1;
    
    // Fetch next page
    url.searchParams.set('page', nextPage);
    
    fetch(url.toString(), {
        headers: {
            'X-Requested-With': 'XMLHttpRequest'
        }
    })
    .then(response => response.text())
    .then(html => {
        // Parse response and extract job items
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');
        const newJobs = doc.querySelectorAll('.job-item');
        
        if (newJobs.length > 0) {
            // Append new jobs
            newJobs.forEach(job => {
                jobsList.appendChild(job);
            });
            
            // Update URL without reload
            window.history.pushState({}, '', url.toString());
            
            // Check if there are more jobs
            const hasMore = doc.querySelector('#load-more-btn');
            if (!hasMore) {
                loadMoreBtn.style.display = 'none';
            }
        } else {
            loadMoreBtn.style.display = 'none';
        }
    })
    .catch(error => {
        console.error('Error loading more jobs:', error);
        showToast('Error loading more jobs. Please try again.', 'error');
    })
    .finally(() => {
        loadMoreBtn.disabled = false;
        spinner.classList.add('d-none');
    });
}

function setupJobAlerts() {
    // Check if user is logged in
    if (!isUserLoggedIn()) {
        showLoginModal();
        return;
    }
    
    // Show job alerts modal or redirect to alerts page
    window.location.href = '/account/job-alerts';
}

function isUserLoggedIn() {
    return document.body.classList.contains('authenticated') || 
           document.querySelector('.user-menu') !== null;
}

function showLoginModal() {
    const loginUrl = '/login?returnUrl=' + encodeURIComponent(window.location.href);
    window.location.href = loginUrl;
}

function showToast(message, type = 'info') {
    const toast = document.createElement('div');
    toast.className = `toast-notification toast-${type}`;
    toast.textContent = message;
    
    document.body.appendChild(toast);
    
    setTimeout(() => toast.classList.add('show'), 100);
    setTimeout(() => {
        toast.classList.remove('show');
        setTimeout(() => toast.remove(), 300);
    }, 3000);
}

// Load saved view preference
document.addEventListener('DOMContentLoaded', function() {
    const savedView = localStorage.getItem('jobsViewType');
    if (savedView) {
        setView(savedView);
        document.querySelector(`[onclick="setView('${savedView}')"]`)?.classList.add('active');
        document.querySelector(`[onclick="setView('${savedView === 'list' ? 'grid' : 'list'}')"]`)?.classList.remove('active');
    }
});
</script>